#fun start

(()->
  #void
  example = (param1,param2) -> 
    p1 = param1
    p2 = param2
    return;

  example1 = (param1...) ->
    p1 = param1

  example2 = (param1,param2...) -> 
    p1 = param1 
    p2 = param2
  
  example3 = (param1,param2,param3...) ->
    p1 = param1
    p2 = param2
    p3 = param3
    param3

  example4 = (param1,param2) ->
    param3 = "Filling the #{param1} with #{param2}..."
    return;
  return;
)()

#fun end



#data type
(()->
  #number:
  number = 42

  #boolean:
  opposite = true

  #condition:
  number = -42 if opposite

  #function:
  square = (x) -> x*x

  #array:
  list = []

  #object:
  math = 
    param1 : param1
    param2 : param2
    param3 : param3
    param4 : param4

  #alert:
  alert "I knew it" if elvis?

  #array comprehensions:
  cubes = (math.cube num for num in list)
  
  #Jquery:
  $('.account').attr class : 'active'
  log object.class

  return
)()
#data end


#condition statement start

(()->
  mood = greatlyImprove if singing
  if happy and knowsIt
    clapsHands()
    chaChaCha()
  else
    showIt()
  date = if friday then sue else jill
  options or= defaults
  return;
)()

(()->
  eat food for food in ['toast','cheese','wine']
  courses = ['greens','caviar','truffles','roast','cake']
  menu i + 1, dish for dish, i in courses
  foods = ['broccoli','spinach','chocolate']
  eat food for food in foods when food isnt 'chocolate'
  return
)()
switch day
  when "Mon" then go work
  when "Tue" then go relax
  when "Thu" then go iceFishing
  when "Fri", "Sat"
    if day is bingoDay
      go bingo
      go dancing
  when "Sun" then go church
  else go work
#condition statement end

#context this start

(()->
  list = [1,2,3,4,5,6,7]
  context = this
  example = (param1,param2) ->
    return
  example list...
  example.apply(context,list)
  return
)()

(() ->
  countdown = (num for num in [10..1])

  yearsOld = max: 10, ida: 9, tim: 11

  ages = for child, age of yearsOld
    "#{child} is #{age}"

  # Econ 101
  if this.studyingEconomics
    buy()  while supply > demand
    sell() until supply > demand

  # Nursery Rhyme
  num = 6
  lyrics = while num -= 1
    "#{num} little monkeys, jumping on the bed.
      One fell out and bumped his head."
)()
Account = (customer, cart) ->
  @customer = customer
  @cart = cart

  $('.shopping_cart').bind 'click', (event) =>
    @customer.purchase @cart
#context this end

#do start
(() ->
  for filename in list
    do (filename) ->
      fs.readFile filename, (err, contents) ->
        compile filename, contents.toString()
)()
#do end




#array start 
(() ->
  numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

  copy    = numbers[0...numbers.length]

  middle  = copy[3..6]
)()

(() ->
  numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
  numbers[3..6] = [-3, -4, -5, -6]
)()
#array end



#grade start 
grade = (student) ->
  if student.excellentWork
    "A+"
  else if student.okayStuff
    if student.triedHard then "B" else "B-"
  else
    "C"
eldest = if 24 > 21 then "Liz" else "Ike"
#grade end





((hello,world...)->
  hello = hello + world;
  console.log(hello);
)('hello','world')

hello = '1';
world = '2';
do(hello,world) ->
  console.log(hello+world)

square = (x) -> x * x
cube   = (x) -> square(x) * x
